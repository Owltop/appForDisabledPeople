version: '3.8'

services:
  rabbitmq:
    image: "rabbitmq:3-management"
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - my-network
    restart: always
  postgresql:
    container_name: "postgresql"
    image: postgres:15.5
    restart: unless-stopped
    environment:
      POSTGRESS_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_MULTIPLE_DATABASES: main
    ports:
      - "5432:5432"
    networks:
      - my-network
    volumes:
      - ./configs/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: "pg_isready -U postgres"
      interval: 10s
      timeout: 5s
      retries: 5
  nginx:
    image: nginx
    ports:
      - "5050:5050"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
        - my-network
    depends_on:
      - app1
      - app2
      - statistics
    restart: always
  app1:
    image: app
    build:
      context: ./
      dockerfile: Dockerfile
    ports:
      - "5051:5050"
    networks:
        - my-network
    depends_on:
      - postgresql
      - rabbitmq
  app2:
    image: app
    build:
      context: ./
      dockerfile: Dockerfile
    ports:
      - "5052:5050"
    networks:
        - my-network
    depends_on:
      - postgresql
      - rabbitmq
  statistics:
    build:
      context: .
      dockerfile: ./src/statistics/Dockerfile
    ports:
      - "5053:5053"
    networks:
        - my-network
    depends_on:
      - postgresql
      - rabbitmq
  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    networks:
      - my-network

networks:
  my-network:
    name: "my-network"
